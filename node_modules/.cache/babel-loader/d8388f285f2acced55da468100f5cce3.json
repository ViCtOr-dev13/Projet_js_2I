{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nconst db = firebase.firestore();\nexport function useFace() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n\n  const getUsers = () => {\n    db.collection(\"users\").get().then(snapshot => {\n      const res = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setUsers(res);\n    });\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []); // Return face methods\n\n  return {\n    users\n  };\n}\n\n_s(useFace, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");","map":{"version":3,"sources":["/Users/yolo/Documents/dev/js/faceid/src/hooks/useFace.jsx"],"names":["useState","useEffect","firebase","db","firestore","useFace","users","setUsers","getUsers","collection","get","then","snapshot","res","docs","map","doc","id","data"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AAEA,MAAMC,EAAE,GAAGD,QAAQ,CAACE,SAAT,EAAX;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMQ,QAAQ,GAAG,MAAM;AACrBL,IAAAA,EAAE,CAACM,UAAH,CAAc,OAAd,EACGC,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAU;AACtCC,QAAAA,EAAE,EAAED,GAAG,CAACC,EAD8B;AAEtC,WAAGD,GAAG,CAACE,IAAJ;AAFmC,OAAV,CAAlB,CAAZ;AAKAX,MAAAA,QAAQ,CAACM,GAAD,CAAR;AACD,KATH;AAUD,GAXD;;AAaAZ,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT,CAhBwB,CAoBxB;;AACA,SAAO;AACLF,IAAAA;AADK,GAAP;AAGD;;GAxBeD,O","sourcesContent":["import { useState, useEffect } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst db = firebase.firestore();\n\nexport function useFace() {\n  const [users, setUsers] = useState([]);\n\n  const getUsers = () => {\n    db.collection(\"users\")\n      .get()\n      .then((snapshot) => {\n        const res = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n\n        setUsers(res);\n      });\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  // Return face methods\n  return {\n    users,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}