{"ast":null,"code":"var _jsxFileName = \"/Users/yolo/Documents/dev/js/faceid/src/hooks/useAuth.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MESUREMENT_ID\n});\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n\n  return useContext(AuthContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const AuthProvider = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(null);\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n\n  const signin = (email, password) => {\n    return firebase.auth().signInWithEmailAndPassword(email, password).then(response => {\n      setUser(response.user);\n      return response.user;\n    });\n  };\n\n  const signup = (email, password) => {\n    return firebase.auth().createUserWithEmailAndPassword(email, password).then(response => {\n      setUser(response.user);\n      return response.user;\n    });\n  };\n\n  const signout = () => {\n    return firebase.auth().signOut().then(() => {\n      setUser(false);\n    });\n  };\n\n  const sendPasswordResetEmail = email => {\n    return firebase.auth().sendPasswordResetEmail(email).then(() => {\n      return true;\n    });\n  };\n\n  const confirmPasswordReset = (code, password) => {\n    return firebase.auth().confirmPasswordReset(code, password).then(() => {\n      return true;\n    });\n  };\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n      setUser(user);\n      setIsAuthenticating(false);\n    }); // Cleanup subscription on umount\n\n    return () => unsubscribe();\n  }, []);\n  const values = {\n    user,\n    isAuthenticating,\n    signin,\n    signup,\n    signout,\n    sendPasswordResetEmail,\n    confirmPasswordReset\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: values,\n    children: !isAuthenticating && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AuthProvider, \"x2ysLbFWVl2Vse86GigDsRu6nhc=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/yolo/Documents/dev/js/faceid/src/hooks/useAuth.jsx"],"names":["React","useState","useEffect","useContext","createContext","firebase","initializeApp","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","measurementId","REACT_APP_FIREBASE_MESUREMENT_ID","AuthContext","useAuth","AuthProvider","children","user","setUser","isAuthenticating","setIsAuthenticating","signin","email","password","auth","signInWithEmailAndPassword","then","response","signup","createUserWithEmailAndPassword","signout","signOut","sendPasswordResetEmail","confirmPasswordReset","code","unsubscribe","onAuthStateChanged","values"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MESUREMENT_ID,\n});\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n\n  const signin = (email, password) => {\n    return firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((response) => {\n        setUser(response.user);\n        return response.user;\n      });\n  };\n  const signup = (email, password) => {\n    return firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then((response) => {\n        setUser(response.user);\n        return response.user;\n      });\n  };\n  const signout = () => {\n    return firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        setUser(false);\n      });\n  };\n  const sendPasswordResetEmail = (email) => {\n    return firebase\n      .auth()\n      .sendPasswordResetEmail(email)\n      .then(() => {\n        return true;\n      });\n  };\n  const confirmPasswordReset = (code, password) => {\n    return firebase\n      .auth()\n      .confirmPasswordReset(code, password)\n      .then(() => {\n        return true;\n      });\n  };\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n      setUser(user);\n      setIsAuthenticating(false);\n    });\n\n    // Cleanup subscription on umount\n    return () => unsubscribe();\n  }, []);\n\n  const values = {\n    user,\n    isAuthenticating,\n    signin,\n    signup,\n    signout,\n    sendPasswordResetEmail,\n    confirmPasswordReset,\n  };\n\n  return (\n    <AuthContext.Provider value={values}>\n      {!isAuthenticating && children}\n    </AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}